# {{ ansible_managed }}

db:
  image: postgres:9.3.5
  restart: "{{ docker.restart_policy }}"
  environment:
    - PGDATA=/var/lib/postgresql/data/pgdata
  volumes:
    - 'pgdata:/var/lib/postgresql/data/pgdata'

redis:
  image: redis:2.8.21
  restart: "{{ docker.restart_policy }}"

web:
  image: instedd/hub:{{ hub.version }}
  restart: "{{ docker.restart_policy }}"
  container_name: hub
  hostname: "{{ hub.hostname }}"
  domainname: "{{ hub.domainname }}"
  links: &links
    - db
    - redis
  env_file: .docker-env
  dns: "{{ ansible_docker0.ipv4.address }}"
  environment:
    VIRTUAL_HOST: "{{ hub.hostname | withdomain(hub.domainname) }}"
  volumes: &volumes
    - 'config/guisso.yml:/app/config/guisso.yml'
    - 'config/database.yml:/app/config/database.yml'
    - 'config/poirot.yml:/app/config/poirot.yml'
    - 'config/secrets.yml:/app/config/secrets.yml'
    - 'config/settings.yml:/app/config/settings.local.yml'
    - 'log:/app/log'

resque:
  image: instedd/hub:{{ hub.version }}
  restart: "{{ docker.restart_policy }}"
  links: *links
  volumes: *volumes
  command: rake resque:work QUEUE=hub TERM_CHILD=1 FORK_PER_JOB=false
  env_file: .docker-env
  dns: "{{ ansible_docker0.ipv4.address }}"

resquescheduler:
  image: instedd/hub:{{ hub.version }}
  restart: "{{ docker.restart_policy }}"
  links: *links
  volumes: *volumes
  command: rake resque:scheduler
  env_file: .docker-env
  dns: "{{ ansible_docker0.ipv4.address }}"
